name: GraalVM CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      # 2. สร้างฐานข้อมูลโดยใช้ Docker
      relay-db:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: ${{ secrets.DATABASE_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DATABASE_NAME }}
        ports:
          - 5432:5432
        healthcheck:
          test: ["CMD-SHELL", "pg_isready -U ${{ secrets.DATABASE_USERNAME }} -d ${{ secrets.DATABASE_NAME }}"]
          interval: 10s
          timeout: 5s
          retries: 5

    steps:
      # 1. จัดเตรียม OS
      - name: Checkout code
        uses: actions/checkout@v2

      # 3. ติดตั้ง graalvm-community 21.0.2 และกำหนดตัวแปรสะภาพแสดงล้อม
      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # 4. ตรวจสอบว่า graalvm พร้อมใช้งาน
      - name: Check GraalVM version
        run: java --version

      # 5. จัดเตรียมสภาพแวดล้อมแล้วทำการ compile
      - name: Compile with Gradle
        run: ./gradlew nativeOptimizedCompile
